#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
io_utils.py
-----------
프로젝트 전역에서 공통으로 참조하는 기본 설정값들과,
출력/로그 저장 경로를 보장(create)하는 간단 유틸을 제공합니다.

구성 요소
- 카메라 인덱스: WIDE_CAM_INDEX, INNER_CAM_INDEX
- 프레임 크기: FRAME_W, FRAME_H
- 저장 경로: SAVE_DIR
- 밝기 임계값: MIN_INTENSITY
- 디렉터리 보장: ensure_dir(path)

설계 배경
- Jetson Nano + USB 카메라 환경에서 /dev/videoN 형태로 장치가 노출됩니다.
- 카메라 인덱스/프레임 크기/저장 경로/임계값은 여러 모듈에서 공통으로 필요하므로
  한 곳에서 선언/관리하여 일관성을 유지합니다.
"""

import os

# ──────────────────────────────────────────────────────────────────────────────
# 공용 설정값 (필요 시 프로젝트 전반에서 import 하여 사용)
# ──────────────────────────────────────────────────────────────────────────────

# 사용 카메라 인덱스
# - /dev/video0, /dev/video1 ... 처럼 노출되는 UVC(USB Video Class) 장치 번호입니다.
# - WIDE_CAM_INDEX: 광각(바깥 환경) 카메라. 기본값 0 → /dev/video0
# - INNER_CAM_INDEX: 내부(사람 눈) 카메라. 기본값 1 → /dev/video1
#   * 현재 시스템에서 내부 카메라가 인식되지 않는다면, 실제 장치 연결/드라이버 상태에 따라
#     번호가 달라질 수 있으니, 필요 시 런타임에 점검하여 조정하세요.
WIDE_CAM_INDEX  = 0
INNER_CAM_INDEX = 1

# 카메라 프레임 크기(권장값)
# - Jetson Nano에서 MJPG 1280x720 @ 30 FPS 조합이 실시간 처리(HSV 등)와
#   USB 대역폭/CPU부하 균형 측면에서 실무적으로 안정적입니다.
# - 일부 카메라/드라이버는 요청한 해상도를 정확히 따르지 않을 수 있습니다.
FRAME_W, FRAME_H = 1280, 720

# 결과 이미지(주석 포함) 저장 디렉터리
# - 원본 이미지는 저장하지 않고, 주석(ROI/밝은점/중심 등)만 그린 결과를 저장합니다.
# - 상대 경로 "./captures"는 프로젝트 실행 위치 기준입니다.
#   필요 시 절대 경로나 다른 폴더로 변경할 수 있습니다.
SAVE_DIR = "./captures"

# 밝기 임계값 (0.0 ~ 1.0)
# - HSV의 V 채널(명도)에서 0~255를 0.0~1.0으로 정규화했을 때의 기준선입니다.
# - 탐지된 최고 밝기가 이 값보다 낮으면 "밝은 점 없음"으로 간주합니다.
# - 실외 조도/카메라 노출에 따라 0.20~0.40 범위에서 튜닝하는 것을 권장합니다.
MIN_INTENSITY = 0.25  # 0.0 ~ 1.0

# ──────────────────────────────────────────────────────────────────────────────
# 유틸 함수
# ──────────────────────────────────────────────────────────────────────────────

def ensure_dir(path: str) -> None:
    """
    주어진 경로의 디렉터리가 없으면 생성합니다(존재하면 아무 동작도 하지 않음).

    사용 목적:
    - 결과 이미지나 로그를 저장하기 전에, 대상 폴더가 항상 존재하도록 보장합니다.
    - 멀티스레드/멀티프로세스 환경이 아니라면 간단히 호출해도 안전합니다.

    Args:
        path (str): 생성하려는(혹은 존재 보장하려는) 디렉터리 경로.
                    예: "./captures", "/home/user/project/output" 등

    Returns:
        None
    """
    # os.path.exists(path) 가 False일 때만 폴더 생성
    # * race condition(동시에 생성 시도)까지 고려해야 하는 상황이라면
    #   try/except로 os.makedirs를 감싸는 방식도 사용할 수 있습니다.
    if not os.path.exists(path):
        os.makedirs(path)
